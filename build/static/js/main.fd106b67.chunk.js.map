{"version":3,"sources":["components/Pages/Admin.js","components/Pages/AdditionalComments.js","components/Pages/AreYouBeingSupported.js","components/Pages/DoYouUnderstandContent.js","components/Pages/HowDoYouFeel.js","components/Pages/ThankYou.js","components/Pages/Header.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["Admin","state","feedback","getFeedback","props","axios","get","then","response","console","log","data","_this","setState","catch","error","alert","deleteFeedback","id","method","url","concat","submit","confirmAlert","title","message","buttons","label","onClick","this","_this2","react_default","a","createElement","Paper_default","Typography_default","color","variant","Table_default","className","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","key","feeling","understanding","support","comments","IconButton_default","aria-label","Delete_default","Component","connect","reduxState","emptyAdditionalComments","AdditionalComments","handleChange","event","target","value","Object","defineProperty","name","handleSubmit","preventDefault","dispatch","type","payload","history","push","clearSupportField","Card_default","CardContent_default","FormControl_default","onSubmit","TextField_default","onChange","placeholder","Button_default","emptyAreYouBeingSupported","AreYouBeingSupported","Select_default","MenuItem_default","emptyDoYouUnderstandContent","DoYouUnderstandContent","emptyHowDoYouFeel","HowDoYouFeel","ThankYou","completeFeedback","feedbackReducer","newFeedback","CardActions_default","component","Header","adminButton","alt","src","size","withRouter","App","HashRouter","Pages_Header","Route","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","reduxStore","createStore","combineReducers","arguments","length","undefined","action","objectSpread","applyMiddleware","logger","ReactDOM","render","es","store","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qfAgBMA,6MAEFC,MAAO,CAACC,SAAU,MAOhBC,YAAc,SAACC,GACbC,IAAMC,IAAI,mBACTC,KAAK,SAACC,GACHC,QAAQC,IAAI,eAAgBF,EAASG,MACrCC,EAAKC,SAAS,CACVX,SAAUM,EAASG,SAG1BG,MAAM,SAACC,GACJC,MAAM,mCAAoCD,QAOhDE,eAAiB,SAACC,GAChBb,IAAM,CACFc,OAAQ,SACRC,IAAG,mBAAAC,OAAqBH,KAEzBX,KAAM,SAACC,GACNI,EAAKT,gBAENW,MAAO,SAACC,GACPC,MAAM,mCAKVM,OAAS,SAACJ,GACNK,uBAAa,CACXC,MAAO,oBACPC,QAAS,2BACTC,QAAS,CACP,CACEC,MAAO,MACPC,QAAS,kBAAMhB,EAAKK,eAAeC,KAErC,CACES,MAAO,KACPC,QAAS,kBAAMZ,MAAM,qGA7C/Ba,KAAK1B,+CAoDE,IAAA2B,EAAAD,KACP,OACAE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAcC,QAAQ,MAAxC,gBACIN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAOO,UAAU,SACbR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACS,EAAAV,EAAD,gBACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,sBACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,gBACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,iBACAD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,kBAGRD,EAAAC,EAAAC,cAACU,EAAAX,EAAD,KACKH,KAAK5B,MAAMC,SAAS0C,IAAI,SAAA1C,GAAQ,OACjC6B,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAUa,IAAK3C,EAASgB,IACpBa,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAa9B,EAAS4C,SACtBf,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAY9B,EAAS6C,eACrBhB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAY9B,EAAS8C,SACrBjB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAY9B,EAAS+C,UACrBlB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAWD,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAYmB,aAAW,SAASvB,QAAS,kBAAME,EAAKR,OAAOpB,EAASgB,MAAKa,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,qBA9E5FqB,aA8FHC,cALc,SAACC,GAAD,MAAiB,CAC5CA,eAIaD,CAA8BtD,iGClGzCwD,EAA0B,CAC5BP,SAAU,IAIRQ,6MACFxD,MAAQuD,IAERE,aAAe,SAACC,GACZlD,QAAQC,IAAI,wCAAyCiD,EAAMC,OAAOC,OAClEjD,EAAKC,SAALiD,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMC,OAAOI,KAAOL,EAAMC,OAAOC,WAM1CI,aAAe,SAACN,GACZlD,QAAQC,IAAI,yCAA0CiD,EAAMC,OAAOC,OACnEF,EAAMO,iBACNtD,EAAKR,MAAM+D,SAAS,CAAEC,KAAM,cAAeC,QAASzD,EAAKX,QACzDW,EAAKR,MAAMkE,QAAQC,KAAK,SAI5BC,kBAAoB,WAChB5D,EAAKC,SAAS2C,4EAId,OACAzB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAMd,GAAG,SACLa,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,gBAAgBC,QAAQ,MAA1C,gBACAN,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAcC,QAAQ,MAAxC,oCACAN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAa4C,SAAU/C,KAAKoC,cACxBlC,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAW8C,SAAUjD,KAAK6B,aAAcU,KAAK,OAAOP,MAAOhC,KAAK5B,MAAMgD,SAAU8B,YAAY,mBAAmBf,KAAK,aACpHjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAKoC,aAAc5B,QAAQ,YAAYD,MAAM,UAAUgC,KAAK,SAASP,MAAM,QAA5F,kBAlCSR,aA2ChBC,gBAAUG,yCC9CrBwB,GAA4B,CAC9BjC,QAAS,IAGPkC,8MAEFjF,MAAQgF,KAGRvB,aAAe,SAACC,GACZlD,QAAQC,IAAI,0CAA2CiD,EAAMC,OAAOC,OACpEjD,EAAKC,SAALiD,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMC,OAAOI,KAAOL,EAAMC,OAAOC,WAM1CI,aAAe,SAACN,GACZlD,QAAQC,IAAI,2CAA4CiD,EAAMC,OAAOC,OACrEF,EAAMO,iBACNtD,EAAKR,MAAM+D,SAAS,CAAEC,KAAM,cAAeC,QAASzD,EAAKX,QACzDW,EAAKR,MAAMkE,QAAQC,KAAK,SAI5BC,kBAAoB,WAChB5D,EAAKC,SAASoE,6EAId,OACAlD,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAMd,GAAG,SACLa,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,gBAAgBC,QAAQ,MAA1C,gBACAN,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAcC,QAAQ,MAAxC,sCACIN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAa4C,SAAU/C,KAAKoC,cACxBlC,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAQ8C,SAAUjD,KAAK6B,aAAcU,KAAK,SAASP,MAAOhC,KAAK5B,MAAM+C,QAAS+B,YAAY,aAAaf,KAAK,WACxGjC,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAM,IAAhB,UACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,MAEJ9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAKoC,aAAc5B,QAAQ,YAAYD,MAAM,UAAUgC,KAAK,SAASP,MAAM,QAA5F,kBA3CWR,aAoDlBC,iBAAU4B,ICxDrBG,GAA8B,CAChCtC,cAAe,IAGbuC,8MACFrF,MAAQoF,KAGR3B,aAAe,SAACC,GACZlD,QAAQC,IAAI,4CAA6CiD,EAAMC,OAAOC,OACtEjD,EAAKC,SAALiD,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMC,OAAOI,KAAOL,EAAMC,OAAOC,WAM1CI,aAAe,SAACN,GACZlD,QAAQC,IAAI,6CAA8CiD,EAAMC,OAAOC,OACvEF,EAAMO,iBACNtD,EAAKR,MAAM+D,SAAS,CAAEC,KAAM,wBAAyBC,QAASzD,EAAKX,QACnEW,EAAKR,MAAMkE,QAAQC,KAAK,+EAKxB,OACAxC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAMd,GAAG,SACLa,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,gBAAgBC,QAAQ,MAA1C,gBACAN,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAcC,QAAQ,MAAxC,gDACIN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAa4C,SAAU/C,KAAKoC,cACxBlC,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAQ8C,SAAUjD,KAAK6B,aAAcU,KAAK,SAASP,MAAOhC,KAAK5B,MAAM8C,cAAegC,YAAY,aAAaf,KAAK,iBAC9GjC,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAM,IAAhB,UACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,MAEJ9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAKoC,aAAc5B,QAAQ,YAAYD,MAAM,UAAUgC,KAAK,SAASP,MAAM,QAA5F,kBAtCaR,aAgDpBC,iBAAUgC,ICnDrBC,GAAoB,CACtBzC,QAAS,IAGP0C,8MACFvF,MAAQsF,KAGR7B,aAAe,SAACC,GACZlD,QAAQC,IAAI,mCACZE,EAAKC,SAALiD,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMC,OAAOI,KAAOL,EAAMC,OAAOC,WAM1CI,aAAe,SAACN,GACZlD,QAAQC,IAAI,oCACZiD,EAAMO,iBAGNtD,EAAKR,MAAM+D,SAAS,CAAEC,KAAM,cAAeC,QAASzD,EAAKX,QACzDW,EAAKR,MAAMkE,QAAQC,KAAK,SAI5BC,kBAAoB,WAChB5D,EAAKC,SAAS0E,6EAId,OACAxD,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAMd,GAAG,SACLa,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,gBAAgBC,QAAQ,MAA1C,gBACAN,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAcC,QAAQ,MAAxC,8BACIN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAa4C,SAAU/C,KAAKoC,cACxBlC,EAAAC,EAAAC,cAACkD,GAAAnD,EAAD,CAAQ8C,SAAUjD,KAAK6B,aAAcU,KAAK,SAASP,MAAOhC,KAAK5B,MAAM6C,QAASiC,YAAY,aAAaf,KAAK,WACxGjC,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAM,IAAhB,UACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,KACA9B,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,CAAU6B,MAAO,GAAjB,MAEJ9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAKoC,aAAc5B,QAAQ,YAAYD,MAAM,UAAUgC,KAAK,SAASP,MAAM,QAA5F,kBA5CGR,aAsDVC,iBAAUkC,yBCxDrBC,8MAIFC,iBAAmB,SAACtF,GAChBK,QAAQC,IAAI,eAAgBE,EAAKR,MAAMmD,WAAWoC,iBAElD/E,EAAKR,MAAMkE,QAAQC,KAAK,KACxB,IAAIqB,EAAchF,EAAKR,MAAMmD,WAAWoC,gBACxCtF,IAAM,CACFc,OAAQ,OACRC,IAAK,kBACLT,KAAMiF,IAETrF,KAAK,SAACC,GACHC,QAAQC,IAAI,6BAA8BF,KAG7CM,MAAM,SAACC,GACJN,QAAQC,IAAI,+BAAgCK,8EAQhD,OAEAgB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAMd,GAAG,SACJa,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAaO,UAAU,gBACnBR,EAAAC,EAAAC,cAAC4D,GAAA7D,EAAD,KACGD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAK6D,iBAAkBrD,QAAQ,WAAWD,MAAM,UAAUgC,KAAK,SAASP,MAAM,QAA/F,mBAGJ9B,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACID,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,gBAAgB0D,UAAU,KAAKzD,QAAQ,MAAzD,gCAEAN,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,MAAM,cAAc0D,UAAU,KAAKzD,QAAQ,MAAvD,6BAvCOgB,aAgDNC,eApDY,SAAEC,GAAF,MAAmB,CAAEA,eAoDjCD,CAA8BmC,cC3DzCM,8MAGJC,YAAc,SAACrC,GACblD,QAAQC,IAAI,kBACZiD,EAAMO,iBACNtD,EAAKR,MAAMkE,QAAQC,KAAK,mFAIpB,OACAxC,EAAAC,EAAAC,cAAA,UAAQf,GAAG,UAEVa,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,OAAKgE,IAAI,SAASC,IAAI,2BAA1B,cAA+DnE,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQJ,QAASC,KAAKmE,YAAa3D,QAAQ,YAAYD,MAAM,YAAYgC,KAAK,SAASP,MAAM,QAAQsC,KAAK,QAAQ5D,UAAU,eAA5H,wBAbnDc,aAqBJ+C,gBAAWL,ICbtBM,oLAEF,OAGEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACIvE,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAEVR,EAAAC,EAAAC,cAACsE,GAAD,MAIDxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIZ,UAAYN,KAClCzD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,KAAKZ,UAAYR,KAC7BvD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,KAAKZ,UAAYZ,KAC7BnD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,KAAKZ,UAAYrC,IAC7B1B,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,KAAKZ,UAAYL,KAC7B1D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,SAASZ,UAAY9F,aAjB7BqD,aAwBHC,iBAAU+C,IC5BnBM,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3G,KAAK,SAAA+G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvH,QACfkH,UAAUC,cAAcO,WAK1BlH,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBI,MAAM,SAAAC,GACLN,QAAQM,MAAM,4CAA6CA,uCC3C3D6G,GAAaC,aACfC,aAAgB,CACdnC,gBA3BkB,WAAwB,IAAvB1F,EAAuB8H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAqB5C,MAnBmB,gBAAhBC,EAAO9D,MACN3D,QAAQC,IAAIwH,EAAO7D,SACnBpE,EAAQiI,EAAO7D,SAEK,gBAAhB6D,EAAO9D,MACX3D,QAAQC,IAAIwH,EAAO7D,SACnBpE,EAAK6D,OAAAqE,EAAA,EAAArE,CAAA,GAAO7D,EAAUiI,EAAO7D,UAET,0BAAhB6D,EAAO9D,MACX3D,QAAQC,IAAIwH,EAAO7D,SACnBpE,EAAK6D,OAAAqE,EAAA,EAAArE,CAAA,GAAO7D,EAAUiI,EAAO7D,UAET,gBAAhB6D,EAAO9D,OACX3D,QAAQC,IAAIwH,EAAO7D,SACnBpE,EAAK6D,OAAAqE,EAAA,EAAArE,CAAA,GAAO7D,EAAUiI,EAAO7D,UAGjC5D,QAAQC,IAAI,yBAA0BT,GAE/BA,KAQPmI,aAAgBC,OAGlBC,IAASC,OACPxG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAUC,MAAOb,IACf7F,EAAAC,EAAAC,cAACyG,GAAD,OAEFC,SAASC,eAAe,SD3Bb,WACb,GAA6C,kBAAmBzB,UAAW,CAGzE,GADkB,IAAI0B,IAAIC,GAAwBjC,OAAOC,UAC3CiC,SAAWlC,OAAOC,SAASiC,OAIvC,OAGFlC,OAAOmC,iBAAiB,OAAQ,WAC9B,IAAM9B,EAAK,GAAA7F,OAAMyH,GAAN,sBAEPnC,IAiDV,SAAiCO,GAE/B+B,MAAM/B,GACH3G,KAAK,SAAAC,GAGkB,MAApBA,EAAS0I,SACuD,IAAhE1I,EAAS2I,QAAQ7I,IAAI,gBAAgB8I,QAAQ,cAG7CjC,UAAUC,cAAciC,MAAM9I,KAAK,SAAA+G,GACjCA,EAAagC,aAAa/I,KAAK,WAC7BsG,OAAOC,SAASyC,aAKpBtC,GAAgBC,KAGnBpG,MAAM,WACLL,QAAQC,IACN,mEArEA8I,CAAwBtC,GAIxBC,UAAUC,cAAciC,MAAM9I,KAAK,WACjCE,QAAQC,IACN,+GAMJuG,GAAgBC,MCAxBuC","file":"static/js/main.fd106b67.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Admin extends Component {\n  \n    state= {feedback: []};\n    // mounting GET response to the DOM, when rendered\n    componentDidMount() {\n        this.getFeedback();\n      };\n\n      ///GET acios is getting information so it can be rendered to the DOM\n      getFeedback = (props) => {\n        axios.get('/prime_feedback')\n        .then((response) => {\n            console.log('GET Response', response.data);\n            this.setState({\n                feedback: response.data\n            })\n        })\n        .catch((error) => {\n            alert('error in getFeedback in Admin.js', error);\n        })\n      }\n\n      ///Delete function will delete selected line of feedback\n      ///from the admin list, update the DB, and rerender the \n      /// list using this.getFeedback();\n      deleteFeedback = (id) => {\n        axios({\n            method: 'DELETE',\n            url: `/prime_feedback/${id}`\n          })\n          .then( (response) => {\n            this.getFeedback();\n          })\n          .catch( (error) => {\n            alert('Bad stuff happened! Oh no!');\n          })\n        }\n        /// this function is asking the admin user to verify\n        /// whether or not they want to delete a line of feedback\n        submit = (id) => {\n            confirmAlert({\n              title: 'Confirm to submit',\n              message: 'Are you sure to do this.',\n              buttons: [\n                {\n                  label: 'Yes',\n                  onClick: () => this.deleteFeedback(id),\n                },\n                {\n                  label: 'No',\n                  onClick: () => alert('Click No')\n                }\n              ]\n            })\n          };\n      \n\n      render() {\n        return (\n        <Paper>\n            <Typography color=\"textPrimary\" variant=\"h5\">ALL FEEDBACK</Typography>\n                <Table className=\"Table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Feeling</TableCell>\n                            <TableCell>Understanding</TableCell>\n                            <TableCell>Support</TableCell>\n                            <TableCell>Comments</TableCell>\n                            <TableCell>Delete?</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.feedback.map(feedback =>\n                        <TableRow key={feedback.id}>\n                            <TableCell >{feedback.feeling}</TableCell>\n                            <TableCell>{feedback.understanding}</TableCell>\n                            <TableCell>{feedback.support}</TableCell>\n                            <TableCell>{feedback.comments}</TableCell>\n                            <TableCell><IconButton aria-label=\"Delete\" onClick={() => this.submit(feedback.id)}><DeleteIcon /></IconButton></TableCell> \n                        </TableRow> \n                        )} \n                    </TableBody>\n                </Table>\n        </Paper>\n\n        )\n      }\n  }\n  \n  const mapReduxStateToProps = (reduxState) => ({\n    reduxState\n  });\n\n///connecting to react-redux and mapping props\n  export default connect(mapReduxStateToProps)(Admin);","import React, {Component} from 'react';\n// import {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n/// imported all necessary material UI and react/redux imports\n\n//setting a constant emptying object\nconst emptyAdditionalComments = {\n    comments: '',        \n};\n\n\nclass AdditionalComments extends Component {\n    state = emptyAdditionalComments;\n    /// setting state to click event value\n    handleChange = (event) => {\n        console.log('in handleChange on AdditionalComments', event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n    \n    ///handleSubmit is sending information to reducer \n    /// and pushing user to next page\n    handleSubmit = (event) => {\n        console.log('in Handle Submit on AdditionalComments', event.target.value); \n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_COMMENT', payload: this.state});\n        this.props.history.push('/5')\n        \n    };\n    // clearing inputs\n    clearSupportField = () => {\n        this.setState(emptyAdditionalComments);\n    };\n  \n      render() {\n        return (\n        <Card id=\"cards\">\n            <CardContent>\n                <Typography color=\"textSecondary\" variant=\"h5\">4 of 4 Pages</Typography>\n                <Typography color=\"textPrimary\" variant=\"h3\">Any comments you want to leave? </Typography>\n                <br></br>\n                    <FormControl onSubmit={this.handleSubmit}>\n                        <TextField onChange={this.handleChange} type=\"text\" value={this.state.comments} placeholder=\"Add Comment Here\" name=\"comments\"></TextField>\n                        <br></br>\n                        <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" value=\"NEXT\">NEXT</Button>\n                    </FormControl>\n            </CardContent>\n        </Card> \n         \n        )\n      }\n  }\n  ///connecting page to react-redux \n  export default connect()(AdditionalComments);","import React, {Component} from 'react';\n// import {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n/// imported all necessary material UI and react/redux imports\n\n//setting a constant emptying object\n\nconst emptyAreYouBeingSupported = {\n    support: '',        \n};\n\nclass AreYouBeingSupported extends Component {\n  \n    state = emptyAreYouBeingSupported;\n    \n     /// setting state to clcik event value\n    handleChange = (event) => {\n        console.log('in handleChange on AreYouBeingSupported', event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n    \n    ///handleSubmit is sending information to reducer \n    /// and pushing user to next page\n    handleSubmit = (event) => {\n        console.log('in Handle Submit on AreYouBeingSupported', event.target.value); \n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_SUPPORT', payload: this.state});\n        this.props.history.push('/4')\n        \n    };\n    ///clearing inputs\n    clearSupportField = () => {\n        this.setState(emptyAreYouBeingSupported);\n    };\n  \n      render() {\n        return (\n        <Card id=\"cards\">\n            <CardContent>\n                <Typography color=\"textSecondary\" variant=\"h5\">3 of 4 Pages</Typography>\n                <Typography color=\"textPrimary\" variant=\"h3\">How well are you being supported? </Typography>\n                    <br></br>\n                    <FormControl onSubmit={this.handleSubmit}>\n                        <Select onChange={this.handleChange} type=\"number\" value={this.state.support} placeholder=\"number 1-5\" name=\"support\">\n                            <MenuItem value=''>select</MenuItem>\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                            <MenuItem value={5}>5</MenuItem>\n                        </Select>\n                        <br></br>\n                        <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" value=\"NEXT\">NEXT</Button>\n                    </FormControl>\n            </CardContent>\n        </Card> \n         \n        )\n      }\n  }\n  ///connecting page to react-redux \n  export default connect()(AreYouBeingSupported);\n\n\n\n","import React, {Component} from 'react';\n// import {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\n/// imported all necessary material UI and react/redux imports\n\n//setting a constant emptying object\nconst emptyDoYouUnderstandContent = {\n    understanding: '',        \n};\n\nclass DoYouUnderstandContent extends Component {\n    state = emptyDoYouUnderstandContent;\n    \n    /// setting state to clcik event value\n    handleChange = (event) => {\n        console.log('in handleChange on DoYouUnderstandContent', event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n    \n    ///handleSubmit is sending information to reducer \n    /// and pushing user to next page\n    handleSubmit = (event) => {\n        console.log('in Handle Submit on DoYouUnderstandContent', event.target.value); \n        event.preventDefault();\n        this.props.dispatch({ type: 'ADD_UNDERSTANDCONTENT', payload: this.state});\n        this.props.history.push('/3')\n        \n    }\n  \n      render() {\n        return (\n        <Card id=\"cards\">\n            <CardContent>\n                <Typography color=\"textSecondary\" variant=\"h5\">2 of 4 Pages</Typography>\n                <Typography color=\"textPrimary\" variant=\"h3\">How well are you understanding the content? </Typography>\n                    <br></br>\n                    <FormControl onSubmit={this.handleSubmit}>\n                        <Select onChange={this.handleChange} type=\"number\" value={this.state.understanding} placeholder=\"number 1-5\" name=\"understanding\">\n                            <MenuItem value=''>select</MenuItem>\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                            <MenuItem value={5}>5</MenuItem>\n                        </Select>\n                        <br></br>\n                        <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" value=\"NEXT\">NEXT</Button>\n                    </FormControl>\n            </CardContent>\n        </Card> \n         \n        )\n      }\n  }\n   \n  ///connecting page to react-redux \n  export default connect()(DoYouUnderstandContent);","\nimport React, {Component} from 'react';\n// import {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\n/// imported all necessary material UI and react/redux imports\n\n//setting a constant empying onject\nconst emptyHowDoYouFeel = {\n    feeling: '',        \n};\n\nclass HowDoYouFeel extends Component {\n    state = emptyHowDoYouFeel;\n\n    ///handleChange is changing state on the click event\n    handleChange = (event) => {\n        console.log('in handleChange on HowDoYouFeel');\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n    \n    /// this function is calling our TYPE and sending payload. \n    ///It is also pushing to the next page\n    handleSubmit = (event) => {\n        console.log('in Handle Submit on HowDoYouFeel'); //event is coming back undefined\n        event.preventDefault();\n\n        //in live solve Kris put Dispatch in handleChange\n        this.props.dispatch({ type: 'ADD_FEELING', payload: this.state});\n        this.props.history.push('/2');\n        \n    };\n/// resetting state \n    clearSupportField = () => {\n        this.setState(emptyHowDoYouFeel);\n    };\n  \n      render() {\n        return (\n        <Card id=\"cards\">\n            <CardContent>\n                <Typography color=\"textSecondary\" variant=\"h5\">1 of 4 Pages</Typography>\n                <Typography color=\"textPrimary\" variant=\"h3\">How are you feeling today?</Typography>\n                    <br></br>\n                    <FormControl onSubmit={this.handleSubmit}>\n                        <Select onChange={this.handleChange} type=\"number\" value={this.state.feeling} placeholder=\"number 1-5\" name=\"feeling\">\n                            <MenuItem value=''>select</MenuItem>\n                            <MenuItem value={1}>1</MenuItem>\n                            <MenuItem value={2}>2</MenuItem>\n                            <MenuItem value={3}>3</MenuItem>\n                            <MenuItem value={4}>4</MenuItem>\n                            <MenuItem value={5}>5</MenuItem>\n                        </Select>\n                        <br></br>\n                        <Button onClick={this.handleSubmit} variant=\"contained\" color=\"primary\" type=\"submit\" value=\"NEXT\">NEXT</Button>\n                    </FormControl>\n            </CardContent>\n        </Card> \n         \n        )\n      }\n  }\n  \n  ///connecting react-redux\n  export default connect()(HowDoYouFeel);","import React, {Component} from 'react';\n// import {withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n/// imported all necessary material UI and react/redux imports\n\n//bringing in reduxState\nconst mapReduxStateToProps = ( reduxState ) => ({ reduxState });\n\n\n// console.log('in ThankYou');\nclass ThankYou extends Component {\n  \n    ///On submit button this function is sending the new feedback \n    ///at reduxState and POSTing it.\n    completeFeedback = (props) => {\n        console.log('new feedback', this.props.reduxState.feedbackReducer );\n        // this.props.dispatch({ type: 'ADD_THANKYOU', payload: this.state});\n        this.props.history.push('/');\n        let newFeedback = this.props.reduxState.feedbackReducer;\n        axios({\n            method: 'POST',\n            url: '/prime_feedback',\n            data: newFeedback,\n        })\n        .then((response) => {\n            console.log('sending new feedback to DB', response);\n            \n        })\n        .catch((error) => {\n            console.log('error is POST on ThankYou.js', error);\n            \n        })\n\n    }\n    \n      render() {\n    \n        return (\n            \n        <Card id=\"cards\"> \n             <CardContent className=\"submitButton\">\n                 <CardActions>\n                    <Button onClick={this.completeFeedback} variant=\"outlined\" color=\"primary\" type=\"button\" value=\"HOME\">Send Feedback</Button>\n                </CardActions>\n            </CardContent>\n                <br></br>\n            <CardContent>\n                <Typography color=\"textSecondary\" component=\"h2\" variant=\"h5\">Thank You for your Feedback!</Typography>\n\n                <Typography color=\"textPrimary\" component=\"h1\" variant=\"h2\">YOU ARE AWESOME!</Typography>\n                \n            </CardContent>\n         </Card>  \n        )\n      }\n  }\n  \n  ///connecting react-redux\n  export default connect(mapReduxStateToProps)(ThankYou);","import React, {Component} from 'react';\n// import { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\n// console.log('in Header');\nclass Header extends Component {\n  \n  ///This adminButton send the clickee to the admin page\n  adminButton = (event) => {\n    console.log('in adminButton');\n    event.preventDefault();\n    this.props.history.push('/admin');\n  };\n\n      render() {\n        return (\n        <header id=\"header\">\n\n         <li><img alt=\"people\" src='images/feedbackPic.jpg'/> FEEDBACK! <Button onClick={this.adminButton} variant=\"contained\" color=\"secondary\" type=\"button\" value=\"ADMIN\" size=\"small\" className=\"adminButton\">ADMIN ONLY!</Button></li>\n         \n         </header>\n        )\n      }\n  }\n  \n  ///connecting Header withRouter\n  export default withRouter(Header);","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route} from 'react-router-dom'; // don't need LINK\nimport Admin from '../Pages/Admin'\nimport AdditionalComments from '../Pages/AdditionalComments';\nimport AreYouBeingSupported from '../Pages/AreYouBeingSupported';\nimport DoYouUnderstandContent from '../Pages/DoYouUnderstandContent';\nimport HowDoYouFeel from '../Pages/HowDoYouFeel';\nimport ThankYou from '../Pages/ThankYou';\nimport Header from '../Pages/Header';\nimport { connect } from 'react-redux';\n\n////All components and react/redux imports listed above\n\nclass App extends Component {\n  render() {\n    return (\n\n      \n      <Router>\n          <div className=\"App\">\n                {/* imported separate Header component */}\n               <Header/>\n              \n              {/* created routes for all pages, including the admin page\n              (special button in Header will redirect to the admi page ) */}\n              <Route exact path=\"/\" component= {HowDoYouFeel} />\n              <Route path=\"/2\" component= {DoYouUnderstandContent} />\n              <Route path=\"/3\" component= {AreYouBeingSupported} />\n              <Route path=\"/4\" component= {AdditionalComments} />\n              <Route path=\"/5\" component= {ThankYou} />\n              <Route path=\"/admin\" component= {Admin} />\n          </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\n\n\n///Reducer is handling if/else statements for all actions below\nconst feedbackReducer = (state = [], action) => {\n    // console.log('in feedbackReducer');\n    if(action.type === 'ADD_FEELING'){\n        console.log(action.payload); \n        state = action.payload; \n    }\n    else if(action.type === 'ADD_SUPPORT'){\n        console.log(action.payload);\n        state = {...state, ...action.payload};\n    }\n    else if(action.type === 'ADD_UNDERSTANDCONTENT'){\n        console.log(action.payload);\n        state = {...state, ...action.payload};\n    }\n    else if(action.type === 'ADD_COMMENT'){\n        console.log(action.payload);\n        state = {...state, ...action.payload};\n    }\n \n    console.log('this is current state:', state);\n    \n    return state;\n}\n\n///redux store is handling the distribution of information for my feedbackReducer\nconst reduxStore = createStore(\n    combineReducers({\n      feedbackReducer,\n    }),\n    applyMiddleware(logger)\n  )\n  \n  ReactDOM.render(\n    <Provider store={reduxStore}>\n      <App />\n    </Provider>, \n    document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}